import os
import socket
import sys
from Crypto.Cipher import AES


class client:
    def __init__(self):


            self.ip = sys.argv[1]
            self.port = 9999
            print(self.ip)
            self.socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            self.key = open("Key.bin", 'rb').read()
            self.iv = open("Vector.bin", 'rb').read()
            self.AES = AES.new(self.key, AES.MODE_CFB, self.iv)

    def connect(self):
        try:
            self.socket.connect((self.ip, self.port))
        except socket.error as e:
            print('Invalid argument provided ' + str(e))

    def menu(self):
        a = input("1 . Get Directory\n2 . Remote Shell\n3 . Exit\nInsert choice :\n>> ")
        while a != '0':
            if a == '1':
                choix = input("Do you want to see the downloads folder? y or n >> ")
                if choix == 'y':
                    shell = 'dl'
                    shell = self.AES.encrypt(shell.encode('utf-8'))
                    self.socket.send(shell)
                    self.receive()
                    a = '-1'
                if choix == 'n':
                    a='-1'
            elif a == '2':
                self.remote_shell()
            elif a == '3':
                self.socket.close()
                sys.exit()
            else:
                self.menu()

    def remote_shell(self):
        while True:
            shell = input(">> ")
            while shell == 'quit':
                self.menu()
            while shell == '':
                shell = input(">> ")
            shell = self.AES.encrypt(shell.encode('utf-8'))
            self.socket.send(shell)
            self.receive()

    def receive(self):
        resv = self.socket.recv(1024)
        resv = resv.decode('utf-8')
        print(resv)
        save = open("save.txt", "a")
        save.write(resv)
        save.close()



m = client()
m.connect()
m.menu()
